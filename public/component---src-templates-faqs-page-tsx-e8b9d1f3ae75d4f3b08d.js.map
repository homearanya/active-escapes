{"version":3,"sources":["webpack:///./src/components/tour-faq/faq-block.tsx","webpack:///./src/templates/faqs-page.tsx","webpack:///./src/components/breadcrumbs/breadcrumbs.tsx","webpack:///./src/components/banner-activity/banner-activity.tsx"],"names":["FAQBlock","data","question","answer","active","ref","useRef","height","useResizeObserver","className","style","map","paragraph","j","key","dangerouslySetInnerHTML","__html","FAQSPage","markdownRemark","frontmatter","meta","title","description","banner","intro","faqs","useState","activeTab","setActiveTab","bannerData","heading","subHeading","heroImage","image","childImageSharp","fluid","breadcrumbs","id","name","href","i","onClick","prevActiveTab","Breadcrumbs","to","BannerActivity","data-stellar-background-ratio"],"mappings":"8FAAA,8CA2CeA,IA7BE,SAAC,GAGG,QAFnBC,KAAQC,EAEW,EAFXA,SAAUC,EAEC,EAFDA,OAEC,IADnBC,cACmB,SACbC,EAAMC,iBAAuB,MAC3BC,EAAWC,IAAkB,CACnCH,QADME,OAGR,OACE,oCACE,yBAAKE,UAAU,eACb,4BAAQA,UAAU,SAASP,IAE7B,yBACEO,UAAU,QACVC,MACEN,GAAUG,EAAS,CAAEA,OAAWA,EAAS,GAAd,MAAyB,CAAEA,OAAQ,IAGhE,yBAAKF,IAAKA,EAAKI,UAAU,oBACtBN,EAAOQ,KAAI,SAACC,EAAWC,GAAZ,OACV,uBAAGC,IAAKD,EAAGE,wBAAyB,CAAEC,OAAQJ,a,oCCnC1D,gFAqFeK,UArEE,SAAC,GAWG,QAVnBhB,KACEiB,eACEC,YAQe,IAPbC,KAAQC,EAOK,EAPLA,MAAOC,EAOF,EAPEA,YACfC,EAMa,EANbA,OACAC,EAKa,EALbA,MACAC,EAIa,EAJbA,KAIa,EACeC,mBAAwB,MAAnDC,EADY,KACDC,EADC,KAMbC,EAAiC,CACrCC,QAASP,EAAOO,QAChBC,WAAYR,EAAOQ,WACnBC,UAAWT,EAAOU,MAAMC,gBAAgBC,MACxCC,YAR+B,CAC/B,CAAEC,GAAI,IAAKC,KAAM,OAAQC,KAAM,KAC/B,CAAEF,GAAI,IAAKC,KAAM,6BAA8BC,KAAM,MASvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKlB,MAAOA,EAAOC,YAAaA,IAChC,kBAAC,IAAD,CAAgBrB,KAAM4B,IACtB,yBAAKpB,UAAU,kDACb,yBAAKA,UAAU,aACb,4BAAQA,UAAU,mBAChB,wBAAIA,UAAU,gBAAgBe,EAAMM,SACnCN,EAAMF,YAAYX,KAAI,SAACC,EAAW4B,GAAZ,OACrB,uBACE/B,UAAU,sBACVK,IAAK0B,EACLzB,wBAAyB,CAAEC,OAAQJ,QAGvC,yBAAKH,UAAU,eAEjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,oBACXgB,EAAKd,KAAI,WAAuB6B,GAAM,IAA1BtC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,OACfC,EAASoC,IAAMb,EACrB,OACE,wBACEb,IAAK0B,EACL/B,UAAS,QAASL,EAAS,UAAY,IACvCqC,QAAS,kBACPb,GAAa,SAACc,GAAD,OACXA,IAAkBF,EAAI,KAAOA,OAIjC,kBAAC,IAAD,CAAUvC,KAAM,CAAEC,WAAUC,UAAUC,OAAQA,gB,yGCtDrDuC,EAXK,SAAC,GAAD,IAAGP,EAAH,EAAGA,YAAH,OAClB,yBAAK3B,UAAU,eACb,4BACG2B,EAAYzB,KAAI,gBAAG0B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACf,wBAAIzB,IAAKuB,GACNE,EAAO,kBAAC,OAAD,CAAMK,GAAIL,GAAOD,GAAe,8BAAOA,W,8HC8B1CO,EA1BQ,SAAC,GAAD,QACrB5C,KAAQ6B,EADa,EACbA,QAASC,EADI,EACJA,WAAYC,EADR,EACQA,UAAWI,EADnB,EACmBA,YADnB,OAGrB,6BACE3B,UAAU,+BACVqC,gCAA8B,OAE7Bd,EACC,yBAAKvB,UAAU,gBACb,yBAAKA,UAAU,4CACZuB,GAAa,kBAAC,IAAD,CAAKG,MAAOH,MAG5B,KACJ,yBAAKvB,UAAU,eACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,4BAAKqB,GACL,4BAAQrB,UAAU,YAAYsB,GAC9B,kBAAC,IAAD,CAAaK,YAAaA","file":"component---src-templates-faqs-page-tsx-e8b9d1f3ae75d4f3b08d.js","sourcesContent":["import React, { useRef } from 'react'\n\nimport useResizeObserver from 'use-resize-observer/polyfilled'\n\nexport interface FAQBlockData {\n  question: string\n  answer: string[]\n}\n\ninterface FAQBlockProps {\n  data: FAQBlockData\n  active?: boolean\n}\n\nconst FAQBlock = ({\n  data: { question, answer },\n  active = false,\n}: FAQBlockProps) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const { height } = useResizeObserver({\n    ref,\n  })\n  return (\n    <>\n      <div className=\"faq-heading\">\n        <strong className=\"title\">{question}</strong>\n      </div>\n      <div\n        className=\"slide\"\n        style={\n          active && height ? { height: `${height + 30}px` } : { height: 0 }\n        }\n      >\n        <div ref={ref} className=\"slide-holder faq\">\n          {answer.map((paragraph, j) => (\n            <p key={j} dangerouslySetInnerHTML={{ __html: paragraph }} />\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default FAQBlock\n","import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\n\nimport { ImageSharp } from '../types'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BannerActivity, {\n  BannerActivityData,\n} from '../components/banner-activity'\nimport FAQBlock from '../components/tour-faq/faq-block'\n\ninterface FAQSPageProps {\n  readonly data: PageQueryData\n}\n\nconst FAQSPage = ({\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        meta: { title, description },\n        banner,\n        intro,\n        faqs,\n      },\n    },\n  },\n}: FAQSPageProps) => {\n  const [activeTab, setActiveTab] = useState<number | null>(null)\n  const breadcrumbs: Breadcrumbs = [\n    { id: '1', name: 'home', href: '/' },\n    { id: '2', name: 'frequently asked questions', href: '' },\n  ]\n  const bannerData: BannerActivityData = {\n    heading: banner.heading,\n    subHeading: banner.subHeading,\n    heroImage: banner.image.childImageSharp.fluid,\n    breadcrumbs,\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} />\n      <BannerActivity data={bannerData} />\n      <div className=\"content-block bg-white content-center faq-page\">\n        <div className=\"container\">\n          <header className=\"content-heading\">\n            <h2 className=\"main-heading\">{intro.heading}</h2>\n            {intro.description.map((paragraph, i) => (\n              <p\n                className=\"intro intro--center\"\n                key={i}\n                dangerouslySetInnerHTML={{ __html: paragraph }}\n              />\n            ))}\n            <div className=\"seperator\"></div>\n          </header>\n          <div className=\"row\">\n            <div className=\"col-md-offset-2 col-md-8\">\n              <ol className=\"detail-accordion\">\n                {faqs.map(({ question, answer }, i) => {\n                  const active = i === activeTab\n                  return (\n                    <li\n                      key={i}\n                      className={`faq ${active ? ' active' : ''}`}\n                      onClick={() =>\n                        setActiveTab((prevActiveTab) =>\n                          prevActiveTab === i ? null : i,\n                        )\n                      }\n                    >\n                      <FAQBlock data={{ question, answer }} active={active} />\n                    </li>\n                  )\n                })}\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default FAQSPage\n\ninterface PageQueryData {\n  markdownRemark: {\n    frontmatter: {\n      meta: {\n        title: string\n        description: string\n      }\n      banner: {\n        heading: string\n        subHeading: string\n        image: ImageSharp\n      }\n      intro: {\n        heading: string\n        description: string[]\n      }\n      faqs: {\n        question: string\n        answer: string[]\n      }[]\n    }\n  }\n}\n\nexport const query = graphql`\n  query FAQSPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        meta {\n          title\n          description\n        }\n        banner {\n          heading\n          subHeading\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1920) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n            publicURL\n          }\n        }\n        intro {\n          heading\n          description\n        }\n        faqs {\n          question\n          answer\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface BreadcrumbsProps {\n  breadcrumbs: Breadcrumbs\n}\n\nconst Breadcrumbs = ({ breadcrumbs }: BreadcrumbsProps) => (\n  <nav className=\"breadcrumbs\">\n    <ul>\n      {breadcrumbs.map(({ id, name, href }) => (\n        <li key={id}>\n          {href ? <Link to={href}>{name}</Link> : <span>{name}</span>}\n        </li>\n      ))}\n    </ul>\n  </nav>\n)\nexport default Breadcrumbs\n","import React from 'react'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport Breadcrumbs from '../breadcrumbs'\n\nexport interface BannerActivityData {\n  heading: string\n  subHeading: string\n  breadcrumbs: Breadcrumbs\n  heroImage?: FluidObject | null\n}\n\ninterface BannerActivityProps {\n  data: BannerActivityData\n}\n\nconst BannerActivity = ({\n  data: { heading, subHeading, heroImage, breadcrumbs },\n}: BannerActivityProps) => (\n  <section\n    className=\"banner banner-inner parallax\"\n    data-stellar-background-ratio=\"0.5\"\n  >\n    {heroImage ? (\n      <div className=\"banner-image\">\n        <div className=\"has-overlay has-overlay-dark full-height\">\n          {heroImage && <Img fluid={heroImage} />}\n        </div>\n      </div>\n    ) : null}\n    <div className=\"banner-text\">\n      <div className=\"center-text text-center\">\n        <div className=\"container\">\n          <h1>{heading}</h1>\n          <strong className=\"subtitle\">{subHeading}</strong>\n          <Breadcrumbs breadcrumbs={breadcrumbs} />\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default BannerActivity\n"],"sourceRoot":""}
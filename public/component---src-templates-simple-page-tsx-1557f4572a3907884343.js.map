{"version":3,"sources":["webpack:///./src/components/banner-destination/banner-destination.tsx","webpack:///./src/templates/simple-page.tsx","webpack:///./src/components/breadcrumbs/breadcrumbs.tsx"],"names":["BannerDestination","data","heading","subHeading","heroImage","breadcrumbs","className","data-stellar-background-ratio","fluid","SimplePage","markdownRemark","html","frontmatter","meta","title","description","pageTitle","banner","id","name","href","bannerData","image","childImageSharp","dangerouslySetInnerHTML","__html","Breadcrumbs","map","key","to"],"mappings":"wLA0CeA,EA1BW,SAAC,GAAD,QACxBC,KAAQC,EADgB,EAChBA,QAASC,EADO,EACPA,WAAYC,EADL,EACKA,UAAWC,EADhB,EACgBA,YADhB,OAGxB,6BACEC,UAAU,+BACVC,gCAA8B,OAE7BH,EACC,yBAAKE,UAAU,gBACb,yBAAKA,UAAU,4CACZF,GAAa,kBAAC,IAAD,CAAKI,MAAOJ,MAG5B,KACJ,yBAAKE,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,4BAAKJ,GACL,4BAAQI,UAAU,YAAYH,GAC9B,kBAAC,IAAD,CAAaE,YAAaA,U,kCCnCpC,oEA0DeI,UA7CI,SAAC,GAWG,QAVrBR,KACES,eACEC,EAQiB,EARjBA,KAQiB,IAPjBC,YAOiB,IANfC,KAAQC,EAMO,EANPA,MAAOC,EAMA,EANAA,YACRC,EAKQ,EALfF,MACAG,EAIe,EAJfA,OAKAZ,EAA2B,CAC/B,CAAEa,GAAI,IAAKC,KAAM,OAAQC,KAAM,KAC/B,CAAEF,GAAI,IAAKC,KAAMH,EAAWI,KAAM,KAE9BC,EAAoC,CACxCnB,QAASe,EAAOf,QAChBC,WAAYc,EAAOd,WACnBC,UAAWa,EAAOK,MAAMC,gBAAgBf,MACxCH,eAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKS,MAAOA,EAAOC,YAAaA,IAChC,kBAAC,IAAD,CAAmBd,KAAMoB,IACzB,yBAAKf,UAAU,gEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKY,GAAG,UAAUZ,UAAU,4BAC1B,yBAAKA,UAAU,6BACb,6BAASA,UAAU,eACjB,wBAAIA,UAAU,wBAAwBU,GACtC,yBAAKQ,wBAAyB,CAAEC,OAAQd,c,yGC7B3Ce,EAXK,SAAC,GAAD,IAAGrB,EAAH,EAAGA,YAAH,OAClB,yBAAKC,UAAU,eACb,4BACGD,EAAYsB,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACf,wBAAIQ,IAAKV,GACNE,EAAO,kBAAC,OAAD,CAAMS,GAAIT,GAAOD,GAAe,8BAAOA","file":"component---src-templates-simple-page-tsx-1557f4572a3907884343.js","sourcesContent":["import React from 'react'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport Breadcrumbs from '../breadcrumbs'\n\nexport interface BannerDestinationData {\n  heading: string\n  subHeading: string\n  breadcrumbs: Breadcrumbs\n  heroImage?: FluidObject | null\n}\n\ninterface BannerDestinationProps {\n  data: BannerDestinationData\n}\n\nconst BannerDestination = ({\n  data: { heading, subHeading, heroImage, breadcrumbs },\n}: BannerDestinationProps) => (\n  <section\n    className=\"banner banner-inner parallax\"\n    data-stellar-background-ratio=\"0.5\"\n  >\n    {heroImage ? (\n      <div className=\"banner-image\">\n        <div className=\"has-overlay has-overlay-dark full-height\">\n          {heroImage && <Img fluid={heroImage} />}\n        </div>\n      </div>\n    ) : null}\n    <div className=\"banner-text\">\n      <div className=\"center-text\">\n        <div className=\"container\">\n          <h1>{heading}</h1>\n          <strong className=\"subtitle\">{subHeading}</strong>\n          <Breadcrumbs breadcrumbs={breadcrumbs} />\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default BannerDestination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { ImageSharp } from '../types'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BannerDestination, {\n  BannerDestinationData,\n} from '../components/banner-destination'\n\ninterface SimplePageProps {\n  readonly data: PageQueryData\n}\nconst SimplePage = ({\n  data: {\n    markdownRemark: {\n      html,\n      frontmatter: {\n        meta: { title, description },\n        title: pageTitle,\n        banner,\n      },\n    },\n  },\n}: SimplePageProps) => {\n  const breadcrumbs: Breadcrumbs = [\n    { id: '1', name: 'home', href: '/' },\n    { id: '2', name: pageTitle, href: '' },\n  ]\n  const bannerData: BannerDestinationData = {\n    heading: banner.heading,\n    subHeading: banner.subHeading,\n    heroImage: banner.image.childImageSharp.fluid,\n    breadcrumbs,\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} />\n      <BannerDestination data={bannerData} />\n      <div className=\"content-with-sidebar common-spacing content-left simple-page\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div id=\"content\" className=\"col-md-offset-2 col-md-8\">\n              <div className=\"blog-holder no-pagination\">\n                <article className=\"blog-single\">\n                  <h1 className=\"content-main-heading\">{pageTitle}</h1>\n                  <div dangerouslySetInnerHTML={{ __html: html }} />\n                </article>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SimplePage\n\ninterface PageQueryData {\n  markdownRemark: {\n    html: string\n    frontmatter: {\n      meta: {\n        title: string\n        description: string\n      }\n      title: string\n      banner: {\n        heading: string\n        subHeading: string\n        image: ImageSharp\n      }\n    }\n  }\n}\nexport const query = graphql`\n  query SimplePage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        meta {\n          title\n          description\n        }\n        title\n        banner {\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1920) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n            publicURL\n          }\n          heading\n          subHeading\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface BreadcrumbsProps {\n  breadcrumbs: Breadcrumbs\n}\n\nconst Breadcrumbs = ({ breadcrumbs }: BreadcrumbsProps) => (\n  <nav className=\"breadcrumbs\">\n    <ul>\n      {breadcrumbs.map(({ id, name, href }) => (\n        <li key={id}>\n          {href ? <Link to={href}>{name}</Link> : <span>{name}</span>}\n        </li>\n      ))}\n    </ul>\n  </nav>\n)\nexport default Breadcrumbs\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/breadcrumbs/breadcrumbs.tsx","webpack:///./src/components/banner-activity/banner-activity.tsx","webpack:///./src/components/text-block/text-block.tsx","webpack:///./src/templates/about-page.tsx"],"names":["Breadcrumbs","breadcrumbs","className","map","id","name","href","key","to","BannerActivity","data","heading","subHeading","heroImage","data-stellar-background-ratio","fluid","defaultStyle","transition","opacity","transform","TextBlock","iconClass","text","extraText","useState","openModal","setOpenModal","transitionStyles","entering","entered","exiting","exited","paragraph","i","length","undefined","dangerouslySetInnerHTML","__html","onClick","Transition","in","timeout","state","open","closeHandler","modalTitle","style","AboutPage","markdownRemark","frontmatter","meta","title","description","banner","intro","bannerData","image","childImageSharp","iconsSection","textBlock"],"mappings":"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","file":"component---src-templates-about-page-tsx-6886ac414ec978f468c3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\ninterface BreadcrumbsProps {\n  breadcrumbs: Breadcrumbs\n}\n\nconst Breadcrumbs = ({ breadcrumbs }: BreadcrumbsProps) => (\n  <nav className=\"breadcrumbs\">\n    <ul>\n      {breadcrumbs.map(({ id, name, href }) => (\n        <li key={id}>\n          {href ? <Link to={href}>{name}</Link> : <span>{name}</span>}\n        </li>\n      ))}\n    </ul>\n  </nav>\n)\nexport default Breadcrumbs\n","import React from 'react'\nimport Img, { FluidObject } from 'gatsby-image'\n\nimport Breadcrumbs from '../breadcrumbs'\n\nexport interface BannerActivityData {\n  heading: string\n  subHeading: string\n  breadcrumbs: Breadcrumbs\n  heroImage?: FluidObject | null\n}\n\ninterface BannerActivityProps {\n  data: BannerActivityData\n}\n\nconst BannerActivity = ({\n  data: { heading, subHeading, heroImage, breadcrumbs },\n}: BannerActivityProps) => (\n  <section\n    className=\"banner banner-inner parallax\"\n    data-stellar-background-ratio=\"0.5\"\n  >\n    {heroImage ? (\n      <div className=\"banner-image\">\n        <div className=\"has-overlay has-overlay-dark full-height\">\n          {heroImage && <Img fluid={heroImage} />}\n        </div>\n      </div>\n    ) : null}\n    <div className=\"banner-text\">\n      <div className=\"center-text text-center\">\n        <div className=\"container\">\n          <h1>{heading}</h1>\n          <strong className=\"subtitle\">{subHeading}</strong>\n          <Breadcrumbs breadcrumbs={breadcrumbs} />\n        </div>\n      </div>\n    </div>\n  </section>\n)\n\nexport default BannerActivity\n","import React, { useState } from 'react'\nimport { Transition } from 'react-transition-group'\n\nimport Modal from '../modal'\n\nconst duration = 300\n\nconst defaultStyle = {\n  transition: `opacity, transform ${duration}ms ease-in-out`,\n  opacity: 0,\n  transform: 'scale(0)',\n}\n\nexport interface TextBlockData {\n  iconClass: string\n  heading: string\n  text: string[]\n  extraText: string[]\n}\ninterface TextBlockProps {\n  data: TextBlockData\n}\nconst TextBlock = ({\n  data: { iconClass, heading, text, extraText },\n}: TextBlockProps) => {\n  const [openModal, setOpenModal] = useState(false)\n\n  const transitionStyles = {\n    entering: { opacity: 1, transform: 'scale(1)' },\n    entered: { opacity: 1, transform: 'scale(1)' },\n    exiting: { opacity: 0, transform: 'scale(0)' },\n    exited: { opacity: 0, transform: 'scale(0)' },\n  }\n  return (\n    <>\n      <div className=\"col-sm-6 col-md-3 article col-about-us\">\n        <div className=\"img-wrap1\">\n          <span className=\"ico\">\n            <span className={iconClass} />\n          </span>\n        </div>\n        <div className=\"description\">\n          <h3>{heading}</h3>\n          {text.map((paragraph, i) => (\n            <p\n              key={i}\n              className={i === text.length - 1 ? 'last' : undefined}\n              dangerouslySetInnerHTML={{ __html: paragraph }}\n            />\n          ))}\n          {extraText && extraText.length > 0 ? (\n            <div\n              className=\"btn btn-default read-more\"\n              onClick={() => setOpenModal(true)}\n            >\n              Read more\n            </div>\n          ) : null}\n        </div>\n      </div>\n      <Transition in={openModal} timeout={duration}>\n        {(state: 'entering' | 'entered' | 'exiting' | 'exited') => {\n          return (\n            <Modal\n              open={openModal}\n              closeHandler={() => setOpenModal(false)}\n              modalTitle={heading}\n              style={{\n                ...defaultStyle,\n                ...transitionStyles[state],\n              }}\n            >\n              <>\n                {extraText && extraText.length > 0\n                  ? extraText.map((paragraph, i) => (\n                      <p\n                        key={i}\n                        dangerouslySetInnerHTML={{ __html: paragraph }}\n                      />\n                    ))\n                  : null}\n              </>\n            </Modal>\n          )\n        }}\n      </Transition>\n    </>\n  )\n}\n\nexport default TextBlock\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { ImageSharp } from '../types'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BannerActivity, {\n  BannerActivityData,\n} from '../components/banner-activity'\nimport TextBlock, { TextBlockData } from '../components/text-block'\n\ninterface AboutPageProps {\n  readonly data: PageQueryData\n}\n\nconst AboutPage = ({\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        meta: { title, description },\n        banner,\n        intro,\n      },\n    },\n  },\n}: AboutPageProps) => {\n  const breadcrumbs: Breadcrumbs = [\n    { id: '1', name: 'home', href: '/' },\n    { id: '2', name: 'about', href: '' },\n  ]\n  const bannerData: BannerActivityData = {\n    heading: banner.heading,\n    subHeading: banner.subHeading,\n    heroImage: banner.image.childImageSharp.fluid,\n    breadcrumbs,\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} />\n      <BannerActivity data={bannerData} />\n      <div className=\"content-block bg-white content-center about-us\">\n        <div className=\"container\">\n          <header className=\"content-heading\">\n            <h2 className=\"main-heading\">{intro.heading}</h2>\n            {intro.description.map((paragraph, i) => (\n              <p key={i} dangerouslySetInnerHTML={{ __html: paragraph }} />\n            ))}\n            <div className=\"seperator\"></div>\n          </header>\n          <div className=\"row text-center row-about-us\">\n            {intro.iconsSection.map((textBlock, i) => (\n              <TextBlock key={i} data={textBlock} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default AboutPage\n\ninterface PageQueryData {\n  markdownRemark: {\n    frontmatter: {\n      meta: {\n        title: string\n        description: string\n      }\n      banner: {\n        heading: string\n        subHeading: string\n        image: ImageSharp\n      }\n      intro: {\n        heading: string\n        description: string[]\n        iconsSection: TextBlockData[]\n      }\n    }\n  }\n}\n\nexport const query = graphql`\n  query AboutPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        meta {\n          title\n          description\n        }\n        banner {\n          heading\n          subHeading\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1920) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n            publicURL\n          }\n        }\n        intro {\n          heading\n          description\n          iconsSection {\n            iconClass\n            heading\n            text\n            extraText\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}